{"note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Temporizedslider.js","tagline":"A micro js that implements a customizable temporized image slider with custom texts.","body":"#TemporizedSlider.js\r\n\r\nA micro js that implements a temporized image slider, with custom text and title. It leaves room for others personalized changes.\r\n\r\n##Usage\r\n###Basics\r\n\r\n```javascript\r\nTemporizedSlider.init({\r\n  data : [{\r\n    image : 'https://www.google.com.br/images/srpr/logo3w.png',\r\n    title : 'my title',\r\n    text  : 'temporized text',\r\n    time  : 18\r\n    },{\r\n    image : 'http://railsbrasil.s3.amazonaws.com/sites/4e2c66cde8fb0e0001000004/theme/images/rails.png',\r\n    title : 'my rails title',\r\n    text  : 'temporized rails text',\r\n    time  : 15\r\n  }]\r\n});\r\nTemporizedSlider.pause();     // pause the slider\r\nTemporizedSlider.play();      // Initiate or resume the slider\r\nTemporizedSlider.next();      // go to next slide\r\nTemporizedSlider.previous();  // go to previous slide\r\n```\r\n\r\n###Using Callbacks\r\nOptionally, callbacks can be used to trigger custom actions, on pre-determined moments.\r\n\r\n```javascript\r\nTemporizedSlider.init({\r\n  data : ... ,\r\n  beforeInit : function() {\r\n    console.warn('initiating');\r\n  },\r\n  afterInit : function() {\r\n    console.warn('initiated');\r\n  },\r\n  afterChange : function() {\r\n    console.warn('changed');\r\n  },\r\n  beforePlay : function() {\r\n    console.warn('playing');\r\n  },\r\n  beforePause : function() {\r\n    console.warn('pausing');\r\n  }\r\n});\r\n```\r\n\r\n###HTML Structure\r\nBy default, it looks for three elements to interact `#slider_image` (an image tag), `#slider_title` (a container to hold the title) and a `#slider_text` (another container that will hold the text).\r\n\r\nThose elements can be overwritten through the parameters below:\r\n\r\n```javascript\r\nTemporizedSlider.init({\r\n  data : ... ,\r\n  image_id : 'my_custom_image_id',\r\n  title_id : 'my_custom_title_id',\r\n  text_id : 'my_custom_text_id'\r\n});\r\n```\r\n\r\n###Slider Controls\r\nControls functionality is provided to handle its basic functions, such as `play`, `pause`, `previous` and `next`.\r\n\r\n####Custom Elements\r\nControls will assign its default actions by searching for four core elements that are labeled with the tag ids: `play_control`, `pause_control`, `previous_control` and `next_control`. It is possible to customize them through the Controls parameters, as follow:\r\n\r\n```javascript\r\nTemporizedSlider.init({\r\n  data : ... ,\r\n  controls : {\r\n    ids : {\r\n      play : 'custom_play_id',\r\n      pause : 'custom_pause_id',\r\n      previous : 'custom_previous_id',\r\n      next : 'custom_next_id'\r\n    }\r\n  }\r\n});\r\n```\r\n\r\n####Custom Events\r\nIt's also provided a way to customize the functions that handles Controls events. This can be achieved through the following lines:\r\n\r\n```javascript\r\nTemporizedSlider.init({\r\n  data : ... ,\r\n  controls : {\r\n    functions : {\r\n      play : function() {\r\n        console.warn('play click');\r\n      },\r\n      pause : function() {\r\n        console.warn('pause click');\r\n      },\r\n      previous : function() {\r\n        console.warn('previous click');\r\n      },\r\n      next : function() {\r\n        console.warn('next click');\r\n      }\r\n    }\r\n  }\r\n});\r\n```\r\n\r\n####Shutting off Controls\r\nControls is always on except when modified with the following parameter:\r\n\r\n```javascript\r\nTemporizedSlider.init({\r\n  data : ... ,\r\n  controls : {\r\n    load : false\r\n  }\r\n});\r\n```\r\n\r\n*Note: These functions will overwrite the defaulf behavior. If desired to return to it, you can use default behavior calls such as `TemporizedSlider.next()` and `TemporizedSlider.previous()`.\r\n\r\n##How to contribute\r\nPlease ensure that you provide appropriate test coverage and ensure the documentation is up-to-date. It is encouraged that you perform changes in a clean topic branch rather than a master and that you create a pull request for them. This will facilitate discussion and revision.\r\n\r\nPlease be clean, keep your commits atomic and with the smallest possible logical change. This will increase the likelihood of your submission to be used.\r\n\r\n##License\r\nCopyright (c) 2012 Lukas Alexandre. http://www.devinscene.com.br/\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining\r\na copy of this software and associated documentation files (the\r\n\"Software\"), to use, copy and modify copies of the Software, subject\r\nto the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be\r\nincluded in all copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\r\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\r\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n","google":""}